/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../../contracts/staking-rewards/StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_helperContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "helper",
        type: "address",
      },
    ],
    name: "HelperContractSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
    ],
    name: "RewardsTokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "addRewardsToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRewardsTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getRewardFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    name: "getRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardsTokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "helperContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsTokensMap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "helper",
        type: "address",
      },
    ],
    name: "setHelperContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stakeFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620026b4380380620026b48339810160408190526200003491620000ef565b6200003f3362000082565b6000805460ff60a01b1916905560018055600280546001600160a01b039384166001600160a01b031991821617909155600c805492909316911617905562000127565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ea57600080fd5b919050565b600080604083850312156200010357600080fd5b6200010e83620000d2565b91506200011e60208401620000d2565b90509250929050565b61257d80620001376000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c806388d04b1e1161013b578063c5639cc6116100b8578063e70b9e271161007c578063e70b9e2714610548578063e9fad8ee14610573578063ea7cbff11461057b578063f1229777146105a4578063f2fde38b146105b757600080fd5b8063c5639cc6146104d7578063cba43fe6146104ea578063da09d19d1461050d578063db518db21461052d578063e5c21aba1461054057600080fd5b8063a694fc3a116100ff578063a694fc3a14610478578063b29a81401461048b578063b66503cf1461049e578063b6d0dcd8146104b1578063bcd11014146104c457600080fd5b806388d04b1e146104105780638da5cb5b146104235780639ce43f90146104345780639f9106d114610454578063a5dc9e1b1461046557600080fd5b80633f4ba83a116101c9578063715018a61161018d578063715018a6146103ba57806372f702f3146103c2578063796b89b9146103ed5780638040c65b146103f35780638456cb591461040857600080fd5b80633f4ba83a146103385780635c975abb146103405780635d9103511461035e578063638634ee1461037e57806370a082311461039157600080fd5b806327b936741161021057806327b93674146102bf5780632ce9aead146102ea5780632e1a7d4d1461030a5780632ee409081461031d5780633d18b9121461033057600080fd5b8063055de2751461024d57806318160ddd14610262578063211dc32d14610279578063221ca18c1461028c5780632378bea6146102ac575b600080fd5b61026061025b366004612217565b6105ca565b005b600d545b6040519081526020015b60405180910390f35b610266610287366004612232565b61074e565b61026661029a366004612217565b60066020526000908152604090205481565b6102606102ba366004612265565b610811565b6102666102cd366004612232565b600a60209081526000928352604080842090915290825290205481565b6102666102f8366004612217565b60086020526000908152604090205481565b61026061031836600461228f565b610918565b61026061032b366004612265565b610a3c565b610260610be3565b610260610d0d565b600054600160a01b900460ff165b6040519015158152602001610270565b61026661036c366004612217565b60076020526000908152604090205481565b61026661038c366004612217565b610d41565b61026661039f366004612217565b6001600160a01b03166000908152600e602052604090205490565b610260610d84565b6002546103d5906001600160a01b031681565b6040516001600160a01b039091168152602001610270565b42610266565b6103fb610db8565b60405161027091906122a8565b610260610e1a565b61026061041e366004612265565b610e4c565b6000546001600160a01b03166103d5565b610266610442366004612217565b60096020526000908152604090205481565b6002546001600160a01b03166103d5565b600c546103d5906001600160a01b031681565b61026061048636600461228f565b610f80565b610260610499366004612265565b6110ce565b6102606104ac366004612265565b6111c3565b6103d56104bf36600461228f565b6115ba565b6102666104d2366004612217565b6115e4565b6102606104e5366004612217565b611612565b61034e6104f8366004612217565b60046020526000908152604090205460ff1681565b61026661051b366004612217565b60056020526000908152604090205481565b61026061053b366004612265565b611690565b600354610266565b610266610556366004612232565b600b60209081526000928352604080842090915290825290205481565b610260611804565b610266610589366004612217565b6001600160a01b031660009081526006602052604090205490565b6102666105b2366004612217565b611825565b6102606105c5366004612217565b6118f4565b600260015414156105f65760405162461bcd60e51b81526004016105ed906122f5565b60405180910390fd5b60026001558060005b6003548110156106ec5760006003828154811061061e5761061e61232c565b6000918252602090912001546001600160a01b0316905061063e81611825565b6001600160a01b03821660009081526009602052604090205561066081610d41565b6001600160a01b038083166000908152600860205260409020919091558316156106d95761068e818461074e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b50806106e481612358565b9150506105ff565b50600c546001600160a01b031633146107175760405162461bcd60e51b81526004016105ed90612373565b6001600160a01b03821661073d5760405162461bcd60e51b81526004016105ed90612399565b6107468261198f565b505060018055565b6001600160a01b03821660009081526004602052604081205460ff166107765750600061080b565b6001600160a01b038084166000818152600b6020908152604080832094871680845294825280832054938352600a82528083209483529390529190912054670de0b6b3a7640000906107c786611825565b6107d191906123c2565b6001600160a01b0385166000908152600e60205260409020546107f491906123d9565b6107fe91906123f8565b610808919061241a565b90505b92915050565b6000546001600160a01b0316331461083b5760405162461bcd60e51b81526004016105ed90612432565b6001600160a01b03821660009081526004602052604090205460ff166108a35760405162461bcd60e51b815260206004820152601a60248201527f72657761726420746f6b656e206e6f7420737570706f7274656400000000000060448201526064016105ed565b6001600160a01b038216600090815260056020526040902054421161090a5760405162461bcd60e51b815260206004820152601d60248201527f70726576696f75732072657761726473206e6f7420636f6d706c65746500000060448201526064016105ed565b6109148282611b96565b5050565b6002600154141561093b5760405162461bcd60e51b81526004016105ed906122f5565b60026001553360005b600354811015610a31576000600382815481106109635761096361232c565b6000918252602090912001546001600160a01b0316905061098381611825565b6001600160a01b0382166000908152600960205260409020556109a581610d41565b6001600160a01b03808316600090815260086020526040902091909155831615610a1e576109d3818461074e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b5080610a2981612358565b915050610944565b506107463383611be7565b60026001541415610a5f5760405162461bcd60e51b81526004016105ed906122f5565b6002600155600054600160a01b900460ff1615610a8e5760405162461bcd60e51b81526004016105ed90612467565b8160005b600354811015610b7f57600060038281548110610ab157610ab161232c565b6000918252602090912001546001600160a01b03169050610ad181611825565b6001600160a01b038216600090815260096020526040902055610af381610d41565b6001600160a01b03808316600090815260086020526040902091909155831615610b6c57610b21818461074e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b5080610b7781612358565b915050610a92565b50600c546001600160a01b03163314610baa5760405162461bcd60e51b81526004016105ed90612373565b6001600160a01b038316610bd05760405162461bcd60e51b81526004016105ed90612399565b610bda8383611cd0565b50506001805550565b60026001541415610c065760405162461bcd60e51b81526004016105ed906122f5565b60026001553360005b600354811015610cfc57600060038281548110610c2e57610c2e61232c565b6000918252602090912001546001600160a01b03169050610c4e81611825565b6001600160a01b038216600090815260096020526040902055610c7081610d41565b6001600160a01b03808316600090815260086020526040902091909155831615610ce957610c9e818461074e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b5080610cf481612358565b915050610c0f565b50610d063361198f565b5060018055565b6000546001600160a01b03163314610d375760405162461bcd60e51b81526004016105ed90612432565b610d3f611dae565b565b6001600160a01b0381166000908152600560205260408120544210610d7e576001600160a01b03821660009081526005602052604090205461080b565b4261080b565b6000546001600160a01b03163314610dae5760405162461bcd60e51b81526004016105ed90612432565b610d3f6000611e4b565b60606003805480602002602001604051908101604052809291908181526020018280548015610e1057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610df2575b5050505050905090565b6000546001600160a01b03163314610e445760405162461bcd60e51b81526004016105ed90612432565b610d3f611e9b565b6000546001600160a01b03163314610e765760405162461bcd60e51b81526004016105ed90612432565b6001600160a01b03821660009081526004602052604090205460ff1615610edf5760405162461bcd60e51b815260206004820152601f60248201527f7265776172647320746f6b656e20616c726561647920737570706f727465640060448201526064016105ed565b6003805460018082019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b038516908117909155600081815260046020908152604091829020805460ff1916909417909355519081527f0cb82d053b920831ee1dc1e166c0dc6d25c39520802e3767eada637d1e856c65910160405180910390a16109148282611b96565b60026001541415610fa35760405162461bcd60e51b81526004016105ed906122f5565b6002600155600054600160a01b900460ff1615610fd25760405162461bcd60e51b81526004016105ed90612467565b3360005b6003548110156110c357600060038281548110610ff557610ff561232c565b6000918252602090912001546001600160a01b0316905061101581611825565b6001600160a01b03821660009081526009602052604090205561103781610d41565b6001600160a01b038083166000908152600860205260409020919091558316156110b057611065818461074e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b50806110bb81612358565b915050610fd6565b506107463383611cd0565b6000546001600160a01b031633146110f85760405162461bcd60e51b81526004016105ed90612432565b6002546001600160a01b03838116911614156111565760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f74207769746864726177207374616b696e6720746f6b656e00000060448201526064016105ed565b61117c61116b6000546001600160a01b031690565b6001600160a01b0384169083611f00565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2891015b60405180910390a15050565b6000546001600160a01b031633146111ed5760405162461bcd60e51b81526004016105ed90612432565b6000805b6003548110156112de576000600382815481106112105761121061232c565b6000918252602090912001546001600160a01b0316905061123081611825565b6001600160a01b03821660009081526009602052604090205561125281610d41565b6001600160a01b038083166000908152600860205260409020919091558316156112cb57611280818461074e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b50806112d681612358565b9150506111f1565b506001600160a01b03831660009081526004602052604090205460ff166113475760405162461bcd60e51b815260206004820152601a60248201527f72657761726420746f6b656e206e6f7420737570706f7274656400000000000060448201526064016105ed565b6001600160a01b03831660009081526005602052604090205442106113a7576001600160a01b03831660009081526007602052604090205461138990836123f8565b6001600160a01b03841660009081526006602052604090205561143e565b6001600160a01b0383166000908152600560205260408120546113cb9042906123c2565b6001600160a01b038516600090815260066020526040812054919250906113f290836123d9565b6001600160a01b038616600090815260076020526040902054909150611418828661241a565b61142291906123f8565b6001600160a01b03861660009081526006602052604090205550505b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015611485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a99190612491565b6001600160a01b0385166000908152600760205260409020549091506114cf90826123f8565b6001600160a01b038516600090815260066020526040902054111561152d5760405162461bcd60e51b81526020600482015260146024820152730e4caeec2e4c840e4c2e8ca40e8dede40d0d2ced60631b60448201526064016105ed565b426001600160a01b0385166000908152600860209081526040808320939093556007905220544261155e919061241a565b6001600160a01b0385166000818152600560209081526040918290209390935580519182529181018590527fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29910160405180910390a150505050565b600381815481106115ca57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b038116600090815260076020908152604080832054600690925282205461080b91906123d9565b6000546001600160a01b0316331461163c5760405162461bcd60e51b81526004016105ed90612432565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fd463ca58ea00d3f552e95dc3ea8fa97034bfd2c9d9b13ec245080dfa176feac89060200160405180910390a150565b600260015414156116b35760405162461bcd60e51b81526004016105ed906122f5565b60026001558160005b6003548110156117a9576000600382815481106116db576116db61232c565b6000918252602090912001546001600160a01b031690506116fb81611825565b6001600160a01b03821660009081526009602052604090205561171d81610d41565b6001600160a01b038083166000908152600860205260409020919091558316156117965761174b818461074e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b50806117a181612358565b9150506116bc565b50600c546001600160a01b031633146117d45760405162461bcd60e51b81526004016105ed90612373565b6001600160a01b0383166117fa5760405162461bcd60e51b81526004016105ed90612399565b610bda8383611be7565b336000908152600e602052604090205461181d90610918565b610d3f610be3565b6001600160a01b03811660009081526004602052604081205460ff1661184d57506000919050565b600d5461187057506001600160a01b031660009081526009602052604090205490565b600d546001600160a01b0383166000908152600660209081526040808320546008909252909120546118a185610d41565b6118ab91906123c2565b6118b591906123d9565b6118c790670de0b6b3a76400006123d9565b6118d191906123f8565b6001600160a01b03831660009081526009602052604090205461080b919061241a565b6000546001600160a01b0316331461191e5760405162461bcd60e51b81526004016105ed90612432565b6001600160a01b0381166119835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ed565b61198c81611e4b565b50565b60005b600354811015610914576000600b6000600384815481106119b5576119b561232c565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938716825292909252812054600380549193509084908110611a0257611a0261232c565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a779190612491565b9050600082118015611a895750808211155b15611b81576000600b600060038681548110611aa757611aa761232c565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301822093891682529290925290205560038054611b1591869185919087908110611af957611af961232c565b6000918252602090912001546001600160a01b03169190611f00565b836001600160a01b03167f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e60038581548110611b5357611b5361232c565b60009182526020918290200154604080516001600160a01b0390921682529181018690520160405180910390a25b50508080611b8e90612358565b915050611992565b6001600160a01b038216600081815260076020908152604091829020849055815192835282018390527fad2f86b01ed93b4b3a150d448c61a4f5d8d38075d3c0c64cc0a26fd6e1f4954591016111b7565b60008111611c285760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064016105ed565b80600d54611c3691906123c2565b600d556001600160a01b0382166000908152600e6020526040902054611c5d9082906123c2565b6001600160a01b038084166000908152600e6020526040902091909155600254611c8991163383611f00565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051611cc491815260200190565b60405180910390a25050565b60008111611d115760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064016105ed565b80600d54611d1f919061241a565b600d556001600160a01b0382166000908152600e6020526040902054611d4690829061241a565b6001600160a01b038084166000908152600e6020526040902091909155600254611d739116333084611f68565b816001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d82604051611cc491815260200190565b600054600160a01b900460ff16611dfe5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105ed565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615611ec55760405162461bcd60e51b81526004016105ed90612467565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e2e3390565b6040516001600160a01b038316602482015260448101829052611f6390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611fa6565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611fa09085906323b872dd60e01b90608401611f2c565b50505050565b6000611ffb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120789092919063ffffffff16565b805190915015611f63578080602001905181019061201991906124aa565b611f635760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105ed565b60606120878484600085612091565b90505b9392505050565b6060824710156120f25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105ed565b6001600160a01b0385163b6121495760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ed565b600080866001600160a01b0316858760405161216591906124f8565b60006040518083038185875af1925050503d80600081146121a2576040519150601f19603f3d011682016040523d82523d6000602084013e6121a7565b606091505b50915091506121b78282866121c2565b979650505050505050565b606083156121d157508161208a565b8251156121e15782518084602001fd5b8160405162461bcd60e51b81526004016105ed9190612514565b80356001600160a01b038116811461221257600080fd5b919050565b60006020828403121561222957600080fd5b610808826121fb565b6000806040838503121561224557600080fd5b61224e836121fb565b915061225c602084016121fb565b90509250929050565b6000806040838503121561227857600080fd5b612281836121fb565b946020939093013593505050565b6000602082840312156122a157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156122e95783516001600160a01b0316835292840192918401916001016122c4565b50909695505050505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561236c5761236c612342565b5060010190565b6020808252600c908201526b1d5b985d5d1a1bdc9a5e995960a21b604082015260600190565b6020808252600f908201526e1a5b9d985b1a59081858d8dbdd5b9d608a1b604082015260600190565b6000828210156123d4576123d4612342565b500390565b60008160001904831182151516156123f3576123f3612342565b500290565b60008261241557634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561242d5761242d612342565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000602082840312156124a357600080fd5b5051919050565b6000602082840312156124bc57600080fd5b8151801515811461208a57600080fd5b60005b838110156124e75781810151838201526020016124cf565b83811115611fa05750506000910152565b6000825161250a8184602087016124cc565b9190910192915050565b60208152600082518060208401526125338160408501602087016124cc565b601f01601f1916919091016040019291505056fea2646970667358221220f05dc9ed545f09d95be2075775a6a5ddfdd3fc5946cd47df2327884376ca051064736f6c634300080b0033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _helperContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _stakingToken,
      _helperContract,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _helperContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _helperContract,
      overrides || {}
    );
  }
  override attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  override connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
