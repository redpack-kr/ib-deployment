/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockStakingRewards,
  MockStakingRewardsInterface,
} from "../../../../contracts/staking-rewards/mocks/MockStakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_helperContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "helper",
        type: "address",
      },
    ],
    name: "HelperContractSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
    ],
    name: "RewardsTokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "addRewardsToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRewardsTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getRewardFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    name: "getRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardsTokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "helperContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsTokensMap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setBlockTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "helper",
        type: "address",
      },
    ],
    name: "setHelperContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stakeFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620026ec380380620026ec8339810160408190526200003491620000f4565b8181620000413362000087565b6000805460ff60a01b1916905560018055600280546001600160a01b039384166001600160a01b031991821617909155600c8054929093169116179055506200012c9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ef57600080fd5b919050565b600080604083850312156200010857600080fd5b6200011383620000d7565b91506200012360208401620000d7565b90509250929050565b6125b0806200013c6000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c806388d04b1e11610146578063c5639cc6116100c3578063e5c21aba11610087578063e5c21aba14610560578063e70b9e2714610568578063e9fad8ee14610593578063ea7cbff11461059b578063f1229777146105c4578063f2fde38b146105d757600080fd5b8063c5639cc6146104e4578063cba43fe6146104f7578063da09d19d1461051a578063db518db21461053a578063e0abdf661461054d57600080fd5b8063a694fc3a1161010a578063a694fc3a14610485578063b29a814014610498578063b66503cf146104ab578063b6d0dcd8146104be578063bcd11014146104d157600080fd5b806388d04b1e1461041d5780638da5cb5b146104305780639ce43f90146104415780639f9106d114610461578063a5dc9e1b1461047257600080fd5b80633f4ba83a116101d4578063715018a611610198578063715018a6146103c557806372f702f3146103cd578063796b89b9146103f85780638040c65b146104005780638456cb591461041557600080fd5b80633f4ba83a146103435780635c975abb1461034b5780635d91035114610369578063638634ee1461038957806370a082311461039c57600080fd5b806327b936741161021b57806327b93674146102ca5780632ce9aead146102f55780632e1a7d4d146103155780632ee40908146103285780633d18b9121461033b57600080fd5b8063055de2751461025857806318160ddd1461026d578063211dc32d14610284578063221ca18c146102975780632378bea6146102b7575b600080fd5b61026b61026636600461224a565b6105ea565b005b600d545b6040519081526020015b60405180910390f35b610271610292366004612265565b61076e565b6102716102a536600461224a565b60066020526000908152604090205481565b61026b6102c5366004612298565b610831565b6102716102d8366004612265565b600a60209081526000928352604080842090915290825290205481565b61027161030336600461224a565b60086020526000908152604090205481565b61026b6103233660046122c2565b61093a565b61026b610336366004612298565b610a5e565b61026b610c05565b61026b610d2f565b600054600160a01b900460ff165b604051901515815260200161027b565b61027161037736600461224a565b60076020526000908152604090205481565b61027161039736600461224a565b610d63565b6102716103aa36600461224a565b6001600160a01b03166000908152600e602052604090205490565b61026b610daa565b6002546103e0906001600160a01b031681565b6040516001600160a01b03909116815260200161027b565b600f54610271565b610408610dde565b60405161027b91906122db565b61026b610e40565b61026b61042b366004612298565b610e72565b6000546001600160a01b03166103e0565b61027161044f36600461224a565b60096020526000908152604090205481565b6002546001600160a01b03166103e0565b600c546103e0906001600160a01b031681565b61026b6104933660046122c2565b610fa6565b61026b6104a6366004612298565b6110f4565b61026b6104b9366004612298565b6111e9565b6103e06104cc3660046122c2565b6115ed565b6102716104df36600461224a565b611617565b61026b6104f236600461224a565b611645565b61035961050536600461224a565b60046020526000908152604090205460ff1681565b61027161052836600461224a565b60056020526000908152604090205481565b61026b610548366004612298565b6116c3565b61026b61055b3660046122c2565b600f55565b600354610271565b610271610576366004612265565b600b60209081526000928352604080842090915290825290205481565b61026b611837565b6102716105a936600461224a565b6001600160a01b031660009081526006602052604090205490565b6102716105d236600461224a565b611858565b61026b6105e536600461224a565b611927565b600260015414156106165760405162461bcd60e51b815260040161060d90612328565b60405180910390fd5b60026001558060005b60035481101561070c5760006003828154811061063e5761063e61235f565b6000918252602090912001546001600160a01b0316905061065e81611858565b6001600160a01b03821660009081526009602052604090205561068081610d63565b6001600160a01b038083166000908152600860205260409020919091558316156106f9576106ae818461076e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b50806107048161238b565b91505061061f565b50600c546001600160a01b031633146107375760405162461bcd60e51b815260040161060d906123a6565b6001600160a01b03821661075d5760405162461bcd60e51b815260040161060d906123cc565b610766826119c2565b505060018055565b6001600160a01b03821660009081526004602052604081205460ff166107965750600061082b565b6001600160a01b038084166000818152600b6020908152604080832094871680845294825280832054938352600a82528083209483529390529190912054670de0b6b3a7640000906107e786611858565b6107f191906123f5565b6001600160a01b0385166000908152600e6020526040902054610814919061240c565b61081e919061242b565b610828919061244d565b90505b92915050565b6000546001600160a01b0316331461085b5760405162461bcd60e51b815260040161060d90612465565b6001600160a01b03821660009081526004602052604090205460ff166108c35760405162461bcd60e51b815260206004820152601a60248201527f72657761726420746f6b656e206e6f7420737570706f72746564000000000000604482015260640161060d565b6001600160a01b038216600090815260056020526040902054600f541161092c5760405162461bcd60e51b815260206004820152601d60248201527f70726576696f75732072657761726473206e6f7420636f6d706c657465000000604482015260640161060d565b6109368282611bc9565b5050565b6002600154141561095d5760405162461bcd60e51b815260040161060d90612328565b60026001553360005b600354811015610a53576000600382815481106109855761098561235f565b6000918252602090912001546001600160a01b031690506109a581611858565b6001600160a01b0382166000908152600960205260409020556109c781610d63565b6001600160a01b03808316600090815260086020526040902091909155831615610a40576109f5818461076e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b5080610a4b8161238b565b915050610966565b506107663383611c1a565b60026001541415610a815760405162461bcd60e51b815260040161060d90612328565b6002600155600054600160a01b900460ff1615610ab05760405162461bcd60e51b815260040161060d9061249a565b8160005b600354811015610ba157600060038281548110610ad357610ad361235f565b6000918252602090912001546001600160a01b03169050610af381611858565b6001600160a01b038216600090815260096020526040902055610b1581610d63565b6001600160a01b03808316600090815260086020526040902091909155831615610b8e57610b43818461076e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b5080610b998161238b565b915050610ab4565b50600c546001600160a01b03163314610bcc5760405162461bcd60e51b815260040161060d906123a6565b6001600160a01b038316610bf25760405162461bcd60e51b815260040161060d906123cc565b610bfc8383611d03565b50506001805550565b60026001541415610c285760405162461bcd60e51b815260040161060d90612328565b60026001553360005b600354811015610d1e57600060038281548110610c5057610c5061235f565b6000918252602090912001546001600160a01b03169050610c7081611858565b6001600160a01b038216600090815260096020526040902055610c9281610d63565b6001600160a01b03808316600090815260086020526040902091909155831615610d0b57610cc0818461076e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b5080610d168161238b565b915050610c31565b50610d28336119c2565b5060018055565b6000546001600160a01b03163314610d595760405162461bcd60e51b815260040161060d90612465565b610d61611de1565b565b6001600160a01b038116600090815260056020526040812054600f5410610da2576001600160a01b03821660009081526005602052604090205461082b565b600f5461082b565b6000546001600160a01b03163314610dd45760405162461bcd60e51b815260040161060d90612465565b610d616000611e7e565b60606003805480602002602001604051908101604052809291908181526020018280548015610e3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e18575b5050505050905090565b6000546001600160a01b03163314610e6a5760405162461bcd60e51b815260040161060d90612465565b610d61611ece565b6000546001600160a01b03163314610e9c5760405162461bcd60e51b815260040161060d90612465565b6001600160a01b03821660009081526004602052604090205460ff1615610f055760405162461bcd60e51b815260206004820152601f60248201527f7265776172647320746f6b656e20616c726561647920737570706f7274656400604482015260640161060d565b6003805460018082019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b038516908117909155600081815260046020908152604091829020805460ff1916909417909355519081527f0cb82d053b920831ee1dc1e166c0dc6d25c39520802e3767eada637d1e856c65910160405180910390a16109368282611bc9565b60026001541415610fc95760405162461bcd60e51b815260040161060d90612328565b6002600155600054600160a01b900460ff1615610ff85760405162461bcd60e51b815260040161060d9061249a565b3360005b6003548110156110e95760006003828154811061101b5761101b61235f565b6000918252602090912001546001600160a01b0316905061103b81611858565b6001600160a01b03821660009081526009602052604090205561105d81610d63565b6001600160a01b038083166000908152600860205260409020919091558316156110d65761108b818461076e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b50806110e18161238b565b915050610ffc565b506107663383611d03565b6000546001600160a01b0316331461111e5760405162461bcd60e51b815260040161060d90612465565b6002546001600160a01b038381169116141561117c5760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f74207769746864726177207374616b696e6720746f6b656e000000604482015260640161060d565b6111a26111916000546001600160a01b031690565b6001600160a01b0384169083611f33565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2891015b60405180910390a15050565b6000546001600160a01b031633146112135760405162461bcd60e51b815260040161060d90612465565b6000805b600354811015611304576000600382815481106112365761123661235f565b6000918252602090912001546001600160a01b0316905061125681611858565b6001600160a01b03821660009081526009602052604090205561127881610d63565b6001600160a01b038083166000908152600860205260409020919091558316156112f1576112a6818461076e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b50806112fc8161238b565b915050611217565b506001600160a01b03831660009081526004602052604090205460ff1661136d5760405162461bcd60e51b815260206004820152601a60248201527f72657761726420746f6b656e206e6f7420737570706f72746564000000000000604482015260640161060d565b6001600160a01b038316600090815260056020526040902054600f54106113cf576001600160a01b0383166000908152600760205260409020546113b1908361242b565b6001600160a01b038416600090815260066020526040902055611470565b60006113da600f5490565b6001600160a01b0385166000908152600560205260409020546113fd91906123f5565b6001600160a01b03851660009081526006602052604081205491925090611424908361240c565b6001600160a01b03861660009081526007602052604090205490915061144a828661244d565b611454919061242b565b6001600160a01b03861660009081526006602052604090205550505b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156114b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114db91906124c4565b6001600160a01b038516600090815260076020526040902054909150611501908261242b565b6001600160a01b038516600090815260066020526040902054111561155f5760405162461bcd60e51b81526020600482015260146024820152730e4caeec2e4c840e4c2e8ca40e8dede40d0d2ced60631b604482015260640161060d565b600f546001600160a01b038516600090815260086020908152604080832084905560079091529020546115919161244d565b6001600160a01b0385166000818152600560209081526040918290209390935580519182529181018590527fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29910160405180910390a150505050565b600381815481106115fd57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b038116600090815260076020908152604080832054600690925282205461082b919061240c565b6000546001600160a01b0316331461166f5760405162461bcd60e51b815260040161060d90612465565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fd463ca58ea00d3f552e95dc3ea8fa97034bfd2c9d9b13ec245080dfa176feac89060200160405180910390a150565b600260015414156116e65760405162461bcd60e51b815260040161060d90612328565b60026001558160005b6003548110156117dc5760006003828154811061170e5761170e61235f565b6000918252602090912001546001600160a01b0316905061172e81611858565b6001600160a01b03821660009081526009602052604090205561175081610d63565b6001600160a01b038083166000908152600860205260409020919091558316156117c95761177e818461076e565b6001600160a01b038083166000818152600b60209081526040808320948916808452948252808320959095559181526009825283812054600a83528482209382529290915291909120555b50806117d48161238b565b9150506116ef565b50600c546001600160a01b031633146118075760405162461bcd60e51b815260040161060d906123a6565b6001600160a01b03831661182d5760405162461bcd60e51b815260040161060d906123cc565b610bfc8383611c1a565b336000908152600e60205260409020546118509061093a565b610d61610c05565b6001600160a01b03811660009081526004602052604081205460ff1661188057506000919050565b600d546118a357506001600160a01b031660009081526009602052604090205490565b600d546001600160a01b0383166000908152600660209081526040808320546008909252909120546118d485610d63565b6118de91906123f5565b6118e8919061240c565b6118fa90670de0b6b3a764000061240c565b611904919061242b565b6001600160a01b03831660009081526009602052604090205461082b919061244d565b6000546001600160a01b031633146119515760405162461bcd60e51b815260040161060d90612465565b6001600160a01b0381166119b65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060d565b6119bf81611e7e565b50565b60005b600354811015610936576000600b6000600384815481106119e8576119e861235f565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938716825292909252812054600380549193509084908110611a3557611a3561235f565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aaa91906124c4565b9050600082118015611abc5750808211155b15611bb4576000600b600060038681548110611ada57611ada61235f565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301822093891682529290925290205560038054611b4891869185919087908110611b2c57611b2c61235f565b6000918252602090912001546001600160a01b03169190611f33565b836001600160a01b03167f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e60038581548110611b8657611b8661235f565b60009182526020918290200154604080516001600160a01b0390921682529181018690520160405180910390a25b50508080611bc19061238b565b9150506119c5565b6001600160a01b038216600081815260076020908152604091829020849055815192835282018390527fad2f86b01ed93b4b3a150d448c61a4f5d8d38075d3c0c64cc0a26fd6e1f4954591016111dd565b60008111611c5b5760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b604482015260640161060d565b80600d54611c6991906123f5565b600d556001600160a01b0382166000908152600e6020526040902054611c909082906123f5565b6001600160a01b038084166000908152600e6020526040902091909155600254611cbc91163383611f33565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051611cf791815260200190565b60405180910390a25050565b60008111611d445760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b604482015260640161060d565b80600d54611d52919061244d565b600d556001600160a01b0382166000908152600e6020526040902054611d7990829061244d565b6001600160a01b038084166000908152600e6020526040902091909155600254611da69116333084611f9b565b816001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d82604051611cf791815260200190565b600054600160a01b900460ff16611e315760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161060d565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615611ef85760405162461bcd60e51b815260040161060d9061249a565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e613390565b6040516001600160a01b038316602482015260448101829052611f9690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611fd9565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611fd39085906323b872dd60e01b90608401611f5f565b50505050565b600061202e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120ab9092919063ffffffff16565b805190915015611f96578080602001905181019061204c91906124dd565b611f965760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161060d565b60606120ba84846000856120c4565b90505b9392505050565b6060824710156121255760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161060d565b6001600160a01b0385163b61217c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161060d565b600080866001600160a01b03168587604051612198919061252b565b60006040518083038185875af1925050503d80600081146121d5576040519150601f19603f3d011682016040523d82523d6000602084013e6121da565b606091505b50915091506121ea8282866121f5565b979650505050505050565b606083156122045750816120bd565b8251156122145782518084602001fd5b8160405162461bcd60e51b815260040161060d9190612547565b80356001600160a01b038116811461224557600080fd5b919050565b60006020828403121561225c57600080fd5b6108288261222e565b6000806040838503121561227857600080fd5b6122818361222e565b915061228f6020840161222e565b90509250929050565b600080604083850312156122ab57600080fd5b6122b48361222e565b946020939093013593505050565b6000602082840312156122d457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561231c5783516001600160a01b0316835292840192918401916001016122f7565b50909695505050505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561239f5761239f612375565b5060010190565b6020808252600c908201526b1d5b985d5d1a1bdc9a5e995960a21b604082015260600190565b6020808252600f908201526e1a5b9d985b1a59081858d8dbdd5b9d608a1b604082015260600190565b60008282101561240757612407612375565b500390565b600081600019048311821515161561242657612426612375565b500290565b60008261244857634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561246057612460612375565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000602082840312156124d657600080fd5b5051919050565b6000602082840312156124ef57600080fd5b815180151581146120bd57600080fd5b60005b8381101561251a578181015183820152602001612502565b83811115611fd35750506000910152565b6000825161253d8184602087016124ff565b9190910192915050565b60208152600082518060208401526125668160408501602087016124ff565b601f01601f1916919091016040019291505056fea2646970667358221220958d4addbca6d406a7121c1d53fa4fe8a8d161629ed2c1869f38fc8c6ff6e10864736f6c634300080b0033";

type MockStakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStakingRewards__factory extends ContractFactory {
  constructor(...args: MockStakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _helperContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockStakingRewards> {
    return super.deploy(
      _stakingToken,
      _helperContract,
      overrides || {}
    ) as Promise<MockStakingRewards>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _helperContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _helperContract,
      overrides || {}
    );
  }
  override attach(address: string): MockStakingRewards {
    return super.attach(address) as MockStakingRewards;
  }
  override connect(signer: Signer): MockStakingRewards__factory {
    return super.connect(signer) as MockStakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStakingRewardsInterface {
    return new utils.Interface(_abi) as MockStakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStakingRewards {
    return new Contract(address, _abi, signerOrProvider) as MockStakingRewards;
  }
}
