/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockIToken,
  MockITokenInterface,
} from "../../../../contracts/staking-rewards/mocks/MockIToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRateStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redeemTokens",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "exchangeRate_",
        type: "uint256",
      },
    ],
    name: "setExchangeRateStored",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setMintFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setRedeemFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supplyRate_",
        type: "uint256",
      },
    ],
    name: "setSupplyRatePerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200148d3803806200148d833981016040819052620000349162000280565b604080518082018252600a81526926b7b1b5902a37b5b2b760b11b6020808301918252835180850190945260048452634d6f636b60e01b9084015281519192916200008291600391620001da565b50805162000098906004906020840190620001da565b505050620000c733620000b0620000ed60201b60201c565b620000c19060ff16612710620003c7565b620000f2565b600580546001600160a01b0319166001600160a01b03929092169190911790556200042d565b601290565b6001600160a01b0382166200014d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001619190620003d5565b90915550506001600160a01b0382166000908152602081905260408120805483929062000190908490620003d5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001e890620003f0565b90600052602060002090601f0160209004810192826200020c576000855562000257565b82601f106200022757805160ff191683800117855562000257565b8280016001018555821562000257579182015b82811115620002575782518255916020019190600101906200023a565b506200026592915062000269565b5090565b5b808211156200026557600081556001016200026a565b6000602082840312156200029357600080fd5b81516001600160a01b0381168114620002ab57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000309578160001904821115620002ed57620002ed620002b2565b80851615620002fb57918102915b93841c9390800290620002cd565b509250929050565b6000826200032257506001620003c1565b816200033157506000620003c1565b81600181146200034a5760028114620003555762000375565b6001915050620003c1565b60ff841115620003695762000369620002b2565b50506001821b620003c1565b5060208310610133831016604e8410600b84101617156200039a575081810a620003c1565b620003a68383620002c8565b8060001904821115620003bd57620003bd620002b2565b0290505b92915050565b6000620002ab838362000311565b60008219821115620003eb57620003eb620002b2565b500190565b600181811c908216806200040557607f821691505b602082108114156200042757634e487b7160e01b600052602260045260246000fd5b50919050565b611050806200043d6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806393621e8c116100ad578063ae9d70b011610071578063ae9d70b01461026d578063c7437e2114610275578063db006a7514610288578063dd62ed3e1461029b578063e30f7ef6146102ae57600080fd5b806393621e8c1461021957806395d89b411461022c578063a0712d6814610234578063a457c2d714610247578063a9059cbb1461025a57600080fd5b8063313ce567116100f4578063313ce5671461019f57806339509351146101ae5780636f307dc3146101c15780636f77fda5146101dc57806370a08231146101f057600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd14610172578063182df0f51461018457806323b872dd1461018c575b600080fd5b6101396102c2565b6040516101469190610dff565b60405180910390f35b61016261015d366004610e4e565b610354565b6040519015158152602001610146565b6002545b604051908152602001610146565b600754610176565b61016261019a366004610e78565b61036c565b60405160128152602001610146565b6101626101bc366004610e4e565b610392565b6005546040516001600160a01b039091168152602001610146565b6101ee6008805460ff19166001179055565b005b6101766101fe366004610eb4565b6001600160a01b031660009081526020819052604090205490565b6101ee610227366004610ecf565b600755565b6101396103b4565b610176610242366004610ecf565b6103c3565b610162610255366004610e4e565b610429565b610162610268366004610e4e565b6104b4565b600654610176565b6101ee610283366004610ecf565b600655565b610176610296366004610ecf565b6104c2565b6101766102a9366004610ee8565b610523565b6101ee6008805461ff001916610100179055565b6060600380546102d190610f1b565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd90610f1b565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b5050505050905090565b60003361036281858561054e565b5060019392505050565b60003361037a858285610673565b6103858585856106ed565b60019150505b9392505050565b6000336103628185856103a58383610523565b6103af9190610f6c565b61054e565b6060600480546102d190610f1b565b60085460009060ff16156103d957506001919050565b6005546103f1906001600160a01b03163330856108bb565b6000670de0b6b3a76400006007548461040a9190610f84565b6104149190610fa3565b90506104203382610926565b50600092915050565b600033816104378286610523565b90508381101561049c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104a9828686840361054e565b506001949350505050565b6000336103628185856106ed565b600854600090610100900460ff16156104dd57506001919050565b6104e73383610a05565b6007546000906104ff84670de0b6b3a7640000610f84565b6105099190610fa3565b600554909150610420906001600160a01b03163383610b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105b05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610493565b6001600160a01b0382166106115760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610493565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061067f8484610523565b905060001981146106e757818110156106da5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610493565b6106e7848484840361054e565b50505050565b6001600160a01b0383166107515760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610493565b6001600160a01b0382166107b35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610493565b6001600160a01b0383166000908152602081905260409020548181101561082b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610493565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610862908490610f6c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ae91815260200190565b60405180910390a36106e7565b6040516001600160a01b03808516602483015283166044820152606481018290526106e79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b80565b6001600160a01b03821661097c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610493565b806002600082825461098e9190610f6c565b90915550506001600160a01b038216600090815260208190526040812080548392906109bb908490610f6c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a655760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610493565b6001600160a01b03821660009081526020819052604090205481811015610ad95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610493565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b08908490610fc5565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610666565b505050565b6040516001600160a01b038316602482015260448101829052610b4b90849063a9059cbb60e01b906064016108ef565b6000610bd5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c529092919063ffffffff16565b805190915015610b4b5780806020019051810190610bf39190610fdc565b610b4b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610493565b6060610c618484600085610c69565b949350505050565b606082471015610cca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610493565b6001600160a01b0385163b610d215760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610493565b600080866001600160a01b03168587604051610d3d9190610ffe565b60006040518083038185875af1925050503d8060008114610d7a576040519150601f19603f3d011682016040523d82523d6000602084013e610d7f565b606091505b5091509150610d8f828286610d9a565b979650505050505050565b60608315610da957508161038b565b825115610db95782518084602001fd5b8160405162461bcd60e51b81526004016104939190610dff565b60005b83811015610dee578181015183820152602001610dd6565b838111156106e75750506000910152565b6020815260008251806020840152610e1e816040850160208701610dd3565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610e4957600080fd5b919050565b60008060408385031215610e6157600080fd5b610e6a83610e32565b946020939093013593505050565b600080600060608486031215610e8d57600080fd5b610e9684610e32565b9250610ea460208501610e32565b9150604084013590509250925092565b600060208284031215610ec657600080fd5b61038b82610e32565b600060208284031215610ee157600080fd5b5035919050565b60008060408385031215610efb57600080fd5b610f0483610e32565b9150610f1260208401610e32565b90509250929050565b600181811c90821680610f2f57607f821691505b60208210811415610f5057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f7f57610f7f610f56565b500190565b6000816000190483118215151615610f9e57610f9e610f56565b500290565b600082610fc057634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610fd757610fd7610f56565b500390565b600060208284031215610fee57600080fd5b8151801515811461038b57600080fd5b60008251611010818460208701610dd3565b919091019291505056fea2646970667358221220f5e73f2236397f5521e27455ca0c8782ad3b4c91bf0ea6aeca0b2e500b813f4a64736f6c634300080b0033";

type MockITokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockITokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockIToken__factory extends ContractFactory {
  constructor(...args: MockITokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    underlying_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockIToken> {
    return super.deploy(underlying_, overrides || {}) as Promise<MockIToken>;
  }
  override getDeployTransaction(
    underlying_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(underlying_, overrides || {});
  }
  override attach(address: string): MockIToken {
    return super.attach(address) as MockIToken;
  }
  override connect(signer: Signer): MockIToken__factory {
    return super.connect(signer) as MockIToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockITokenInterface {
    return new utils.Interface(_abi) as MockITokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockIToken {
    return new Contract(address, _abi, signerOrProvider) as MockIToken;
  }
}
