/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LiquidityMiningStorage,
  LiquidityMiningStorageInterface,
} from "../../../contracts/liquidity-mining/LiquidityMiningStorage";

const _abi = [
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "debtors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardBorrowSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "speed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardBorrowState",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardBorrowerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardReceivers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardSupplierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardSupplySpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "speed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardSupplyState",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardTokensMap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061044b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806360777a4f1161007157806360777a4f146102295780637687c0e01461025a5780637bb7bed114610283578063a3d813b414610296578063aa6be303146102c9578063e5029dc8146102ec57600080fd5b80630bda5be1146100b95780631ad964ed146100f7578063317d2abc146101285780635f3b28021461016f5780635fd85d2f146101c45780635fe3b567146101fe575b600080fd5b6100e46100c7366004610364565b600960209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100e4610105366004610397565b600760209081526000938452604080852082529284528284209052825290205481565b61015a610136366004610364565b60056020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016100ee565b6101a961017d366004610364565b600460209081526000928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016100ee565b6101a96101d2366004610364565b600360209081526000928352604080842090915290825290208054600182015460029092015490919083565b600054610211906001600160a01b031681565b6040516001600160a01b0390911681526020016100ee565b6100e4610237366004610397565b600860209081526000938452604080852082529284528284209052825290205481565b6102116102683660046103da565b600b602052600090815260409020546001600160a01b031681565b6102116102913660046103fc565b61031e565b6102b96102a43660046103da565b60026020526000908152604090205460ff1681565b60405190151581526020016100ee565b6102b96102d73660046103da565b600a6020526000908152604090205460ff1681565b61015a6102fa366004610364565b60066020908152600092835260408084209091529082529020805460019091015482565b6001818154811061032e57600080fd5b6000918252602090912001546001600160a01b0316905081565b80356001600160a01b038116811461035f57600080fd5b919050565b6000806040838503121561037757600080fd5b61038083610348565b915061038e60208401610348565b90509250929050565b6000806000606084860312156103ac57600080fd5b6103b584610348565b92506103c360208501610348565b91506103d160408501610348565b90509250925092565b6000602082840312156103ec57600080fd5b6103f582610348565b9392505050565b60006020828403121561040e57600080fd5b503591905056fea264697066735822122067f397e1c59c26eaeccf3525bf2815cf65c3ec79b52e85108b39cd7fed1544e764736f6c634300080b0033";

type LiquidityMiningStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityMiningStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityMiningStorage__factory extends ContractFactory {
  constructor(...args: LiquidityMiningStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LiquidityMiningStorage> {
    return super.deploy(overrides || {}) as Promise<LiquidityMiningStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LiquidityMiningStorage {
    return super.attach(address) as LiquidityMiningStorage;
  }
  override connect(signer: Signer): LiquidityMiningStorage__factory {
    return super.connect(signer) as LiquidityMiningStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityMiningStorageInterface {
    return new utils.Interface(_abi) as LiquidityMiningStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityMiningStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityMiningStorage;
  }
}
