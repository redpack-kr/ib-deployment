/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockCToken,
  MockCTokenInterface,
} from "../../../../contracts/liquidity-mining/mocks/MockCToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "borrowBalanceStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "setBorrowBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setBorrowIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setTotalBorrows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610261806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806395dd91931161006657806395dd919314610129578063977e19e914610152578063aa5af0fd14610165578063e30443bc1461016d578063f7ea7a3d1461019757600080fd5b806318160ddd146100a35780631ccbe742146100b957806337d9bd92146100e557806347bd3718146100f857806370a0823114610100575b600080fd5b6003545b60405190815260200160405180910390f35b6100e36100c73660046101c6565b6001600160a01b03909116600090815260016020526040902055565b005b6100e36100f33660046101f0565b600255565b6004546100a7565b6100a761010e366004610209565b6001600160a01b031660009081526020819052604090205490565b6100a7610137366004610209565b6001600160a01b031660009081526001602052604090205490565b6100e36101603660046101f0565b600455565b6002546100a7565b6100e361017b3660046101c6565b6001600160a01b03909116600090815260208190526040902055565b6100e36101a53660046101f0565b600355565b80356001600160a01b03811681146101c157600080fd5b919050565b600080604083850312156101d957600080fd5b6101e2836101aa565b946020939093013593505050565b60006020828403121561020257600080fd5b5035919050565b60006020828403121561021b57600080fd5b610224826101aa565b939250505056fea2646970667358221220e0f47887495d4fe7345936a05361b7e8fa05327fc279fbb72efc76fd35b9698b64736f6c634300080b0033";

type MockCTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCToken__factory extends ContractFactory {
  constructor(...args: MockCTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockCToken> {
    return super.deploy(overrides || {}) as Promise<MockCToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockCToken {
    return super.attach(address) as MockCToken;
  }
  override connect(signer: Signer): MockCToken__factory {
    return super.connect(signer) as MockCToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCTokenInterface {
    return new utils.Interface(_abi) as MockCTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCToken {
    return new Contract(address, _abi, signerOrProvider) as MockCToken;
  }
}
