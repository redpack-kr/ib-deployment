/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CCollateralCapStorage,
  CCollateralCapStorageInterface,
} from "../../../../contracts/compound-protocol/CTokenInterfaces.sol/CCollateralCapStorage";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountCollateralTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "collateralCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isCollateralTokenInit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalCollateralTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061012b806100206000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c806319a4dd3c14604b57806385d8a2e6146063578063d240d64a14609a578063d2bb18e91460bd575b600080fd5b605160c3565b60408051918252519081900360200190f35b608660048036036020811015607757600080fd5b50356001600160a01b031660c9565b604080519115158252519081900360200190f35b60516004803603602081101560ae57600080fd5b50356001600160a01b031660de565b605160f0565b60005481565b60026020526000908152604090205460ff1681565b60016020526000908152604090205481565b6003548156fea265627a7a72315820391c6be90717253e45f5728dec36fd16af86605e3f50cfa23071a43d4d2c3a2864736f6c63430005110032";

type CCollateralCapStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCollateralCapStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCollateralCapStorage__factory extends ContractFactory {
  constructor(...args: CCollateralCapStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CCollateralCapStorage> {
    return super.deploy(overrides || {}) as Promise<CCollateralCapStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CCollateralCapStorage {
    return super.attach(address) as CCollateralCapStorage;
  }
  override connect(signer: Signer): CCollateralCapStorage__factory {
    return super.connect(signer) as CCollateralCapStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCollateralCapStorageInterface {
    return new utils.Interface(_abi) as CCollateralCapStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CCollateralCapStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CCollateralCapStorage;
  }
}
