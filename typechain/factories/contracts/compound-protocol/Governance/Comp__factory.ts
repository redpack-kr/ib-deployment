/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Comp,
  CompInterface,
} from "../../../../contracts/compound-protocol/Governance/Comp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516119283803806119288339818101604052602081101561003357600080fd5b50516001600160a01b038116600081815260016020908152604080832080546001600160601b0319166a0771d2fa45345aa9000000908117909155815190815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a350611878806100b06000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b4b5ea5711610071578063b4b5ea57146103ca578063c3cda520146103f0578063dd62ed3e14610437578063e7a324dc14610465578063f1127ed81461046d57610121565b806370a0823114610302578063782d6fe1146103285780637ecebe001461037057806395d89b4114610396578063a9059cbb1461039e57610121565b806323b872dd116100f457806323b872dd14610205578063313ce5671461023b578063587cde1e146102595780635c19a95c1461029b5780636fcfff45146102c357610121565b806306fdde0314610126578063095ea7b3146101a357806318160ddd146101e357806320606b70146101fd575b600080fd5b61012e6104c7565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360408110156101b957600080fd5b506001600160a01b0381351690602001356104e8565b604080519115158252519081900360200190f35b6101eb6105a4565b60408051918252519081900360200190f35b6101eb6105b3565b6101cf6004803603606081101561021b57600080fd5b506001600160a01b038135811691602081013590911690604001356105ce565b61024361070f565b6040805160ff9092168252519081900360200190f35b61027f6004803603602081101561026f57600080fd5b50356001600160a01b0316610714565b604080516001600160a01b039092168252519081900360200190f35b6102c1600480360360208110156102b157600080fd5b50356001600160a01b031661072f565b005b6102e9600480360360208110156102d957600080fd5b50356001600160a01b031661073c565b6040805163ffffffff9092168252519081900360200190f35b6101eb6004803603602081101561031857600080fd5b50356001600160a01b0316610754565b6103546004803603604081101561033e57600080fd5b506001600160a01b038135169060200135610778565b604080516001600160601b039092168252519081900360200190f35b6101eb6004803603602081101561038657600080fd5b50356001600160a01b03166109a5565b61012e6109b7565b6101cf600480360360408110156103b457600080fd5b506001600160a01b0381351690602001356109d8565b610354600480360360208110156103e057600080fd5b50356001600160a01b0316610a14565b6102c1600480360360c081101561040657600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610a85565b6101eb6004803603604081101561044d57600080fd5b506001600160a01b0381358116916020013516610d2b565b6101eb610d5d565b61049f6004803603604081101561048357600080fd5b5080356001600160a01b0316906020013563ffffffff16610d78565b6040805163ffffffff90931683526001600160601b0390911660208301528051918290030190f35b60405180604001604052806005815260200164437265616d60d81b81525081565b6000806000198314156104fe5750600019610523565b610520836040518060600160405280602581526020016115cd60259139610dad565b90505b336000818152602081815260408083206001600160a01b0389168085529083529281902080546001600160601b0319166001600160601b038716908117909155815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a360019150505b92915050565b6a0771d2fa45345aa900000081565b60405180604361172782396043019050604051809103902081565b6001600160a01b0383166000908152602081815260408083203380855290835281842054825160608101909352602580845291936001600160601b0390911692859261062492889291906115cd90830139610dad565b9050866001600160a01b0316836001600160a01b03161415801561065157506001600160601b0382811614155b156106f757600061067b83836040518060600160405280603d81526020016117a6603d9139610e47565b6001600160a01b03898116600081815260208181526040808320948a168084529482529182902080546001600160601b0319166001600160601b03871690811790915582519081529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a3505b610702878783610eb4565b5060019695505050505050565b601281565b6002602052600090815260409020546001600160a01b031681565b6107393382611099565b50565b60046020526000908152604090205463ffffffff1681565b6001600160a01b03166000908152600160205260409020546001600160601b031690565b60004382106107b85760405162461bcd60e51b81526004018080602001828103825260278152602001806115f26027913960400191505060405180910390fd5b6001600160a01b03831660009081526004602052604090205463ffffffff16806107e657600091505061059e565b6001600160a01b038416600090815260036020908152604080832063ffffffff600019860181168552925290912054168310610862576001600160a01b03841660009081526003602090815260408083206000199490940163ffffffff1683529290522054600160201b90046001600160601b0316905061059e565b6001600160a01b038416600090815260036020908152604080832083805290915290205463ffffffff1683101561089d57600091505061059e565b600060001982015b8163ffffffff168163ffffffff16111561096057600282820363ffffffff160481036108cf611533565b506001600160a01b038716600090815260036020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b0316918101919091529087141561093b5760200151945061059e9350505050565b805163ffffffff1687111561095257819350610959565b6001820392505b50506108a5565b506001600160a01b038516600090815260036020908152604080832063ffffffff909416835292905220546001600160601b03600160201b9091041691505092915050565b60056020526000908152604090205481565b60405180604001604052806005815260200164435245414d60d81b81525081565b6000806109fd8360405180606001604052806026815260200161161960269139610dad565b9050610a0a338583610eb4565b5060019392505050565b6001600160a01b03811660009081526004602052604081205463ffffffff1680610a3f576000610a7e565b6001600160a01b0383166000908152600360209081526040808320600019850163ffffffff168452909152902054600160201b90046001600160601b03165b9392505050565b6000604051808061172760439139604080519182900360430182208282019091526005825264437265616d60d81b60209092019190915290507f40e45d329815e79a55e43916f11f7a0112a31146f63a4fcaea413df0567a0bb2610ae7611123565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b031681526020019450505050506040516020818303038152906040528051906020012090506000604051808061180a603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa158015610c25573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c775760405162461bcd60e51b81526004018080602001828103825260268152602001806115816026913960400191505060405180910390fd5b6001600160a01b03811660009081526005602052604090208054600181019091558914610cd55760405162461bcd60e51b81526004018080602001828103825260228152602001806116736022913960400191505060405180910390fd5b87421115610d145760405162461bcd60e51b81526004018080602001828103825260268152602001806115a76026913960400191505060405180910390fd5b610d1e818b611099565b505050505b505050505050565b6001600160a01b039182166000908152602081815260408083209390941682529190915220546001600160601b031690565b60405180603a61180a8239603a019050604051809103902081565b600360209081526000928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b600081600160601b8410610e3f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e04578181015183820152602001610dec565b50505050905090810190601f168015610e315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b509192915050565b6000836001600160601b0316836001600160601b031611158290610eac5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610e04578181015183820152602001610dec565b505050900390565b6001600160a01b038316610ef95760405162461bcd60e51b815260040180806020018281038252603c81526020018061176a603c913960400191505060405180910390fd5b6001600160a01b038216610f3e5760405162461bcd60e51b815260040180806020018281038252603a815260200180611695603a913960400191505060405180910390fd5b6001600160a01b038316600090815260016020908152604091829020548251606081019093526036808452610f89936001600160601b03909216928592919061154b90830139610e47565b6001600160a01b03848116600090815260016020908152604080832080546001600160601b0319166001600160601b03968716179055928616825290829020548251606081019093526030808452610ff194919091169285929091906116f790830139611127565b6001600160a01b0383811660008181526001602090815260409182902080546001600160601b0319166001600160601b039687161790558151948616855290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36001600160a01b0380841660009081526002602052604080822054858416835291205461109492918216911683611191565b505050565b6001600160a01b03808316600081815260026020818152604080842080546001845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461111d828483611191565b50505050565b4690565b6000838301826001600160601b0380871690831610156111885760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610e04578181015183820152602001610dec565b50949350505050565b816001600160a01b0316836001600160a01b0316141580156111bc57506000816001600160601b0316115b15611094576001600160a01b03831615611274576001600160a01b03831660009081526004602052604081205463ffffffff1690816111fc57600061123b565b6001600160a01b0385166000908152600360209081526040808320600019860163ffffffff168452909152902054600160201b90046001600160601b03165b9050600061126282856040518060600160405280602881526020016116cf60289139610e47565b90506112708684848461131f565b5050505b6001600160a01b03821615611094576001600160a01b03821660009081526004602052604081205463ffffffff1690816112af5760006112ee565b6001600160a01b0384166000908152600360209081526040808320600019860163ffffffff168452909152902054600160201b90046001600160601b03165b9050600061131582856040518060600160405280602781526020016117e360279139611127565b9050610d23858484845b60006113434360405180606001604052806034815260200161163f603491396114de565b905060008463ffffffff1611801561138c57506001600160a01b038516600090815260036020908152604080832063ffffffff6000198901811685529252909120548282169116145b156113eb576001600160a01b0385166000908152600360209081526040808320600019880163ffffffff168452909152902080546fffffffffffffffffffffffff000000001916600160201b6001600160601b0385160217905561148a565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b166000818152600383528781208c871682528352878120965187549451909516600160201b026fffffffffffffffffffffffff000000001995871663ffffffff19958616179590951694909417909555938252600490935292909220805460018801909316929091169190911790555b604080516001600160601b0380861682528416602082015281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b600081600160201b8410610e3f5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610e04578181015183820152602001610dec565b60408051808201909152600080825260208201529056fe436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436f6d703a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265436f6d703a3a64656c656761746542795369673a207369676e61747572652065787069726564436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473436f6d703a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f777344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929a265627a7a723158204539bf72f799efc08e916787522d225ce668cb604fc80e836e1cd4826f9d414f64736f6c63430005110032";

type CompConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Comp__factory extends ContractFactory {
  constructor(...args: CompConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Comp> {
    return super.deploy(account, overrides || {}) as Promise<Comp>;
  }
  override getDeployTransaction(
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(account, overrides || {});
  }
  override attach(address: string): Comp {
    return super.attach(address) as Comp;
  }
  override connect(signer: Signer): Comp__factory {
    return super.connect(signer) as Comp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompInterface {
    return new utils.Interface(_abi) as CompInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Comp {
    return new Contract(address, _abi, signerOrProvider) as Comp;
  }
}
