/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TripleSlopeRateModel,
  TripleSlopeRateModelInterface,
} from "../../../contracts/compound-protocol/TripleSlopeRateModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink1_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink2_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roof_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roof",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "kink1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "kink2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "roof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink1_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink2_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roof_",
        type: "uint256",
      },
    ],
    name: "updateTripleRateModel",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000cdc38038062000cdc833981810160405260e08110156200003757600080fd5b508051602082015160408301516060840151608085015160a086015160c090960151600080546001600160a01b0319166001600160a01b03831617905594959394929391929091906200008f8787878787876200009c565b5050505050505062000397565b81831115620000dd5760405162461bcd60e51b815260040180806020018281038252602681526020018062000cb66026913960400191505060405180910390fd5b670de0b6b3a764000081101562000130576040805162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6f662076616c756560701b604482015290519081900360640190fd5b6200014e6301e13380876200023f60201b6200050b1790919060201c565b600255620001a7620001716301e133808562000292602090811b620004a917901c565b62000193670de0b6b3a7640000886200029260201b620004a91790919060201c565b6200023f60201b6200050b1790919060201c565b600155620001c6846301e133806200023f602090811b6200050b17901c565b600381905560048490556005839055600682905560025460015460408051928352602083019190915281810192909252606081018590526080810184905260a0810183905290517f4b73aac5f6a6d7f85af810fb244e35fa994ef635f5806dadef27143533fb64369181900360c00190a1505050505050565b60006200028983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620002f060201b60201c565b90505b92915050565b600082620002a3575060006200028c565b82820282848281620002b157fe5b0414620002895760405162461bcd60e51b815260040180806020018281038252602181526020018062000c956021913960400191505060405180910390fd5b60008183620003805760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620003445781810151838201526020016200032a565b50505050905090810190601f168015620003725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816200038d57fe5b0495945050505050565b6108ee80620003a76000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063b816881611610066578063b8168816146101d5578063b9f9850a14610204578063d34f61141461020c578063f14039de14610214576100cf565b80638da5cb5b1461016c578063a385fb9614610190578063b3da1ebb14610198576100cf565b806315f24053146100d45780632191f92a1461010f57806350af8cd61461012b578063573be0fb146101335780636e71e2d81461013b5780638726bb8914610164575b600080fd5b6100fd600480360360608110156100ea57600080fd5b508035906020810135906040013561021c565b60408051918252519081900360200190f35b610117610326565b604080519115158252519081900360200190f35b6100fd61032b565b6100fd610331565b6100fd6004803603606081101561015157600080fd5b5080359060208101359060400135610337565b6100fd61039c565b6101746103a2565b604080516001600160a01b039092168252519081900360200190f35b6100fd6103b1565b6101d3600480360360c08110156101ae57600080fd5b5080359060208101359060408101359060608101359060808101359060a001356103b9565b005b6100fd600480360360808110156101eb57600080fd5b5080359060208101359060408101359060600135610418565b6100fd610497565b6100fd61049d565b6100fd6104a3565b60008061022a858585610337565b9050600454811161027c57610274600254610268670de0b6b3a764000061025c600154866104a990919063ffffffff16565b9063ffffffff61050b16565b9063ffffffff61054d16565b91505061031f565b60055481116102ae57610274600254610268670de0b6b3a764000061025c6001546004546104a990919063ffffffff16565b60006102d9600254610268670de0b6b3a764000061025c6001546004546104a990919063ffffffff16565b905060006102f2600554846105a790919063ffffffff16565b905061031982610268670de0b6b3a764000061025c600354866104a990919063ffffffff16565b93505050505b9392505050565b600181565b60055481565b60065481565b6000826103465750600061031f565b600061038361036b8461035f888863ffffffff61054d16565b9063ffffffff6105a716565b61025c86670de0b6b3a764000063ffffffff6104a916565b905060065481111561039457506006545b949350505050565b60015481565b6000546001600160a01b031681565b6301e1338081565b6000546001600160a01b031633146104025760405162461bcd60e51b815260040180806020018281038252602681526020018061086e6026913960400191505060405180910390fd5b6104108686868686866105e9565b505050505050565b600080610433670de0b6b3a76400008463ffffffff6105a716565b9050600061044287878761021c565b90506000610462670de0b6b3a764000061025c848663ffffffff6104a916565b905061048b670de0b6b3a764000061025c8361047f8c8c8c610337565b9063ffffffff6104a916565b98975050505050505050565b60035481565b60045481565b60025481565b6000826104b857506000610505565b828202828482816104c557fe5b04146105025760405162461bcd60e51b815260040180806020018281038252602181526020018061084d6021913960400191505060405180910390fd5b90505b92915050565b600061050283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610750565b600082820183811015610502576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061050283836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f77008152506107f2565b818311156106285760405162461bcd60e51b81526004018080602001828103825260268152602001806108946026913960400191505060405180910390fd5b670de0b6b3a764000081101561067a576040805162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6f662076616c756560701b604482015290519081900360640190fd5b61068e866301e1338063ffffffff61050b16565b6002556106c06106a86301e133808563ffffffff6104a916565b61025c87670de0b6b3a764000063ffffffff6104a916565b6001556106d7846301e1338063ffffffff61050b16565b600381905560048490556005839055600682905560025460015460408051928352602083019190915281810192909252606081018590526080810184905260a0810183905290517f4b73aac5f6a6d7f85af810fb244e35fa994ef635f5806dadef27143533fb64369181900360c00190a1505050505050565b600081836107dc5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107a1578181015183820152602001610789565b50505050905090810190601f1680156107ce5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816107e857fe5b0495945050505050565b600081848411156108445760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107a1578181015183820152602001610789565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f6e6c7920746865206f776e6572206d61792063616c6c20746869732066756e6374696f6e2e6b696e6b31206d757374206c657373207468616e206f7220657175616c20746f206b696e6b32a265627a7a72315820c1753152af7f3b1f013d9dcfaf270f903f8df9d8665fab1324d14f89a67ab6f664736f6c63430005110032536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776b696e6b31206d757374206c657373207468616e206f7220657175616c20746f206b696e6b32";

type TripleSlopeRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TripleSlopeRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TripleSlopeRateModel__factory extends ContractFactory {
  constructor(...args: TripleSlopeRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    baseRatePerYear: PromiseOrValue<BigNumberish>,
    multiplierPerYear: PromiseOrValue<BigNumberish>,
    jumpMultiplierPerYear: PromiseOrValue<BigNumberish>,
    kink1_: PromiseOrValue<BigNumberish>,
    kink2_: PromiseOrValue<BigNumberish>,
    roof_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TripleSlopeRateModel> {
    return super.deploy(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink1_,
      kink2_,
      roof_,
      owner_,
      overrides || {}
    ) as Promise<TripleSlopeRateModel>;
  }
  override getDeployTransaction(
    baseRatePerYear: PromiseOrValue<BigNumberish>,
    multiplierPerYear: PromiseOrValue<BigNumberish>,
    jumpMultiplierPerYear: PromiseOrValue<BigNumberish>,
    kink1_: PromiseOrValue<BigNumberish>,
    kink2_: PromiseOrValue<BigNumberish>,
    roof_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink1_,
      kink2_,
      roof_,
      owner_,
      overrides || {}
    );
  }
  override attach(address: string): TripleSlopeRateModel {
    return super.attach(address) as TripleSlopeRateModel;
  }
  override connect(signer: Signer): TripleSlopeRateModel__factory {
    return super.connect(signer) as TripleSlopeRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TripleSlopeRateModelInterface {
    return new utils.Interface(_abi) as TripleSlopeRateModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TripleSlopeRateModel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TripleSlopeRateModel;
  }
}
