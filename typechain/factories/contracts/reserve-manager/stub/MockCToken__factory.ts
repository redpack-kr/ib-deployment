/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockCToken,
  MockCTokenInterface,
} from "../../../../contracts/reserve-manager/stub/MockCToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "reduceReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalReserves_",
        type: "uint256",
      },
    ],
    name: "setTotalReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161046138038061046183398101604081905261002f9161014a565b600080546001600160a01b038085166001600160a01b0319928316179092556002805492841692909116919091179055604080518082019091526007808252666372435245414d60c81b602090920191825261008d91600191610095565b5050506101b8565b8280546100a19061017d565b90600052602060002090601f0160209004810192826100c35760008555610109565b82601f106100dc57805160ff1916838001178555610109565b82800160010185558215610109579182015b828111156101095782518255916020019190600101906100ee565b50610115929150610119565b5090565b5b80821115610115576000815560010161011a565b80516001600160a01b038116811461014557600080fd5b919050565b6000806040838503121561015d57600080fd5b6101668361012e565b91506101746020840161012e565b90509250929050565b600181811c9082168061019157607f821691505b602082108114156101b257634e487b7160e01b600052602260045260246000fd5b50919050565b61029a806101c76000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806307e27959146100675780636f307dc31461007c5780638f840ddd146100a657806395d89b41146100b7578063b0e0bf2a146100cc578063f851a440146100df575b600080fd5b61007a610075366004610196565b6100f0565b005b6002546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b60035460405190815260200161009d565b6100bf610104565b60405161009d91906101af565b61007a6100da366004610196565b600355565b6000546001600160a01b0316610089565b806003546100fe9190610204565b60035550565b60606001805461011390610229565b80601f016020809104026020016040519081016040528092919081815260200182805461013f90610229565b801561018c5780601f106101615761010080835404028352916020019161018c565b820191906000526020600020905b81548152906001019060200180831161016f57829003601f168201915b5050505050905090565b6000602082840312156101a857600080fd5b5035919050565b600060208083528351808285015260005b818110156101dc578581018301518582016040015282016101c0565b818111156101ee576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101561022457634e487b7160e01b600052601160045260246000fd5b500390565b600181811c9082168061023d57607f821691505b6020821081141561025e57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204e71a9cdaa55722e433d3efb1ff722a307fd4f8f915d1ab1c3aba1508016f59d64736f6c634300080b0033";

type MockCTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCToken__factory extends ContractFactory {
  constructor(...args: MockCTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    admin_: PromiseOrValue<string>,
    underlying_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockCToken> {
    return super.deploy(
      admin_,
      underlying_,
      overrides || {}
    ) as Promise<MockCToken>;
  }
  override getDeployTransaction(
    admin_: PromiseOrValue<string>,
    underlying_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(admin_, underlying_, overrides || {});
  }
  override attach(address: string): MockCToken {
    return super.attach(address) as MockCToken;
  }
  override connect(signer: Signer): MockCToken__factory {
    return super.connect(signer) as MockCToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCTokenInterface {
    return new utils.Interface(_abi) as MockCTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCToken {
    return new Contract(address, _abi, signerOrProvider) as MockCToken;
  }
}
