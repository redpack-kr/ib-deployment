/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockReserveManager,
  MockReserveManagerInterface,
} from "../../../../contracts/reserve-manager/stub/MockReserveManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manualBurner",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "_comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wethAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldBurner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newBurner",
        type: "address",
      },
    ],
    name: "BurnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dispatcher",
        type: "address",
      },
    ],
    name: "DispatcherSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldManualBurner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newManualBurner",
        type: "address",
      },
    ],
    name: "ManualBurnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "wasBlocked",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isBlocked",
        type: "bool",
      },
    ],
    name: "MarketBlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "wasManual",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isManual",
        type: "bool",
      },
    ],
    name: "MarketManualBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isNative",
        type: "bool",
      },
    ],
    name: "NativeMarketUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldRatio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRatio",
        type: "uint256",
      },
    ],
    name: "RatioUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenSeized",
    type: "event",
  },
  {
    inputs: [],
    name: "COOLDOWN_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRatio",
        type: "uint256",
      },
    ],
    name: "adjustRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "burners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cTokenAdmins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "dispatchMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isBlocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isNativeMarket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "manualBurn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualBurner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ratio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reservesSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReserves",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "seize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setBlockTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "blocked",
        type: "bool[]",
      },
    ],
    name: "setBlocked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "newBurners",
        type: "address[]",
      },
    ],
    name: "setBurners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDispatcher",
        type: "address",
      },
    ],
    name: "setDispatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "manual",
        type: "bool[]",
      },
    ],
    name: "setManualBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManualBurner",
        type: "address",
      },
    ],
    name: "setManualBurner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isNative",
        type: "bool",
      },
    ],
    name: "setNativeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040526706f05b59d3b200006002553480156200001d57600080fd5b506040516200235b3803806200235b8339810160408190526200004091620001de565b84848484846200005033620000a3565b600180556200005f85620000f3565b600880546001600160a01b0319166001600160a01b03958616179055918316608052821660a0521660c05250506706f05b59d3b20000600255506200025e92505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200014a565b620001c581620000a3565b50565b6001600160a01b0381168114620001c557600080fd5b600080600080600060a08688031215620001f757600080fd5b85516200020481620001c8565b60208701519095506200021781620001c8565b60408701519094506200022a81620001c8565b60608701519093506200023d81620001c8565b60808701519092506200025081620001c8565b809150509295509295909350565b60805160a05160c0516120b8620002a360003960006101d90152600081816103330152818161151301526115870152600081816103e701526111c601526120b86000f3fe6080604052600436106101bb5760003560e01c8063715018a6116100ec578063d1056f321161008a578063eb9253c011610064578063eb9253c01461057c578063f2fde38b1461059c578063f92dc3e9146105bc578063fbac3951146105f257600080fd5b8063d1056f321461051c578063d1448ea01461053c578063e0abdf661461055c57600080fd5b806380a52f13116100c657806380a52f131461049e5780638da5cb5b146104be578063ba22bd76146104dc578063cb7e9057146104fc57600080fd5b8063715018a61461045e57806371ca337d14610473578063796b89b91461048957600080fd5b80634f0e0ef31161015957806359fb459e1161013357806359fb459e146103955780635fe3b567146103d557806366cadfba146104095780636e99d52f1461043957600080fd5b80634f0e0ef3146103215780635074484314610355578063585d332d1461037557600080fd5b80632a682365116101955780632a6823651461029757806330577588146102b957806337a7a334146102d957806341398b15146102f957600080fd5b806302d45457146101c757806303d41e0e1461021857806311d9850e1461024e57600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561022457600080fd5b506101fb610233366004611bb5565b6004602052600090815260409020546001600160a01b031681565b34801561025a57600080fd5b50610282610269366004611bb5565b6005602052600090815260409020805460019091015482565b6040805192835260208301919091520161020f565b3480156102a357600080fd5b506102b76102b2366004611cbf565b610622565b005b3480156102c557600080fd5b506102b76102d4366004611d83565b6107e4565b3480156102e557600080fd5b506102b76102f4366004611dbc565b610899565b34801561030557600080fd5b506101fb73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561032d57600080fd5b506101fb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561036157600080fd5b506102b7610370366004611bb5565b610949565b34801561038157600080fd5b506102b7610390366004611cbf565b610a23565b3480156103a157600080fd5b506103c56103b0366004611bb5565b60076020526000908152604090205460ff1681565b604051901515815260200161020f565b3480156103e157600080fd5b506101fb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561041557600080fd5b506103c5610424366004611bb5565b60096020526000908152604090205460ff1681565b34801561044557600080fd5b506104506201518081565b60405190815260200161020f565b34801561046a57600080fd5b506102b7610bd7565b34801561047f57600080fd5b5061045060025481565b34801561049557600080fd5b50600b54610450565b3480156104aa57600080fd5b506102b76104b9366004611dd5565b610c0d565b3480156104ca57600080fd5b506000546001600160a01b03166101fb565b3480156104e857600080fd5b506102b76104f7366004611bb5565b610dd4565b34801561050857600080fd5b50600a546101fb906001600160a01b031681565b34801561052857600080fd5b506008546101fb906001600160a01b031681565b34801561054857600080fd5b506102b7610557366004611e39565b610e52565b34801561056857600080fd5b506102b7610577366004611dbc565b600b55565b34801561058857600080fd5b506102b7610597366004611e76565b610f50565b3480156105a857600080fd5b506102b76105b7366004611bb5565b611043565b3480156105c857600080fd5b506101fb6105d7366004611bb5565b6003602052600090815260409020546001600160a01b031681565b3480156105fe57600080fd5b506103c561060d366004611bb5565b60066020526000908152604090205460ff1681565b6000546001600160a01b031633146106555760405162461bcd60e51b815260040161064c90611ea2565b60405180910390fd5b80518251146106765760405162461bcd60e51b815260040161064c90611ed7565b60005b82518110156107df5760006006600085848151811061069a5761069a611efd565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff1690508282815181106106e4576106e4611efd565b60200260200101516006600086858151811061070257610702611efd565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe708a906b7e44981bc320303a1b40ebac3e7e5fc33044ee8c98f9d441e83231484838151811061077457610774611efd565b60200260200101518285858151811061078f5761078f611efd565b60200260200101516040516107c4939291906001600160a01b0393909316835290151560208301521515604082015260600190565b60405180910390a150806107d781611f29565b915050610679565b505050565b6000546001600160a01b0316331461080e5760405162461bcd60e51b815260040161064c90611ea2565b6001600160a01b03821660009081526009602052604090205460ff16151581151514610895576001600160a01b038216600081815260096020908152604091829020805460ff19168515159081179091558251938452908301527f85a031e5867bb0d8b29f51514ec1e5686b88de5ef85b20e21951b69d60ae275e91015b60405180910390a15b5050565b6000546001600160a01b031633146108c35760405162461bcd60e51b815260040161064c90611ea2565b670de0b6b3a764000081111561090b5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420726174696f60981b604482015260640161064c565b600280549082905560408051828152602081018490527f3edd74a0325c6bec69d13fe3535717e39b00ff7b4d7aaa83efef9094b33b9683910161088c565b6000546001600160a01b031633146109735760405162461bcd60e51b815260040161064c90611ea2565b6001600160a01b0381166109c95760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e6577206d616e75616c206275726e657200000000000000604482015260640161064c565b600880546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f70faf679176d368ef646486262569090d32c93046b12c561b83aef24a599c740910161088c565b6000546001600160a01b03163314610a4d5760405162461bcd60e51b815260040161064c90611ea2565b8051825114610a6e5760405162461bcd60e51b815260040161064c90611ed7565b60005b82518110156107df57600060076000858481518110610a9257610a92611efd565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff169050828281518110610adc57610adc611efd565b602002602001015160076000868581518110610afa57610afa611efd565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507f0eebbabfe76e717b9d64b861d8bd5c15a4dcb87e132a5131797fcabcdaec306e848381518110610b6c57610b6c611efd565b602002602001015182858581518110610b8757610b87611efd565b6020026020010151604051610bbc939291906001600160a01b0393909316835290151560208301521515604082015260600190565b60405180910390a15080610bcf81611f29565b915050610a71565b6000546001600160a01b03163314610c015760405162461bcd60e51b815260040161064c90611ea2565b610c0b60006110de565b565b6000546001600160a01b03163314610c375760405162461bcd60e51b815260040161064c90611ea2565b8051825114610c585760405162461bcd60e51b815260040161064c90611ed7565b60005b82518110156107df57600060046000858481518110610c7c57610c7c611efd565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a90046001600160a01b03169050828281518110610ccc57610ccc611efd565b602002602001015160046000868581518110610cea57610cea611efd565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f1157fb8d6658622c605f6808d98008e2678911cdb4fd0af271f559b0f29ea949848381518110610d6957610d69611efd565b602002602001015182858581518110610d8457610d84611efd565b6020026020010151604051610db9939291906001600160a01b0393841681529183166020830152909116604082015260600190565b60405180910390a15080610dcc81611f29565b915050610c5b565b6000546001600160a01b03163314610dfe5760405162461bcd60e51b815260040161064c90611ea2565b600a80546001600160a01b0319166001600160a01b0383169081179091556040519081527f76fb8a637e2dd165327482ba43c5a87f91ae0db340dd5c17d7dcbde2266dfb2c9060200160405180910390a150565b60026001541415610ea55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161064c565b60026001556000546001600160a01b0316331480610ecd5750600a546001600160a01b031633145b610f085760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015260640161064c565b60005b8151811015610f4857610f36828281518110610f2957610f29611efd565b602002602001015161112e565b80610f4081611f29565b915050610f0b565b505060018055565b6000546001600160a01b03163314610f7a5760405162461bcd60e51b815260040161064c90611ea2565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610fde57600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610fd8573d6000803e3d6000fd5b50611004565b611004610ff36000546001600160a01b031690565b6001600160a01b0384169083611830565b604080516001600160a01b0384168152602081018390527fb930d7c3c6896f70ea10a959f1d9a7c04e0467138efa4c7040570d4b8f4894b6910161088c565b6000546001600160a01b0316331461106d5760405162461bcd60e51b815260040161064c90611ea2565b6001600160a01b0381166110d25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064c565b6110db816110de565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526006602052604090205460ff16156111a75760405162461bcd60e51b815260206004820152602760248201527f6d61726b657420697320626c6f636b65642066726f6d2072657365727665732060448201526673686172696e6760c81b606482015260840161064c565b604051633d98a1e560e01b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633d98a1e590602401602060405180830381865afa15801561120d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112319190611f44565b6112715760405162461bcd60e51b81526020600482015260116024820152701b585c9ad95d081b9bdd081b1a5cdd1959607a1b604482015260640161064c565b6000816001600160a01b0316638f840ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d59190611f61565b6001600160a01b038316600090815260056020908152604091829020825180840190935280548084526001909101549183019190915291925090158015906113205750818160200151105b156117e4576000836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa158015611365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113899190611f7a565b9050611394600b5490565b82516113a4906201518090611f97565b11156113f25760405162461bcd60e51b815260206004820152601c60248201527f7374696c6c20696e2074686520636f6f6c646f776e20706572696f6400000000604482015260640161064c565b6000670de0b6b3a76400006002548460200151866114109190611faf565b61141a9190611fc6565b6114249190611fe5565b6040516307da3c1d60e01b81526001600160a01b03878116600483015260248201839052919250908316906307da3c1d90604401600060405180830381600087803b15801561147257600080fd5b505af1158015611486573d6000803e3d6000fd5b50505050846001600160a01b0316638f840ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ec9190611f61565b6001600160a01b0386166000908152600960205260408120549195509060ff16156115ad577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000009050611612565b856001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160f9190611f7a565b90505b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167d9190611f61565b6001600160a01b03808916600090815260046020908152604080832054600790925290912054929350169060ff16156116d257506008546001600160a01b03908116906116cd9084168284611830565b61179b565b6001600160a01b0381166117195760405162461bcd60e51b815260206004820152600e60248201526d189d5c9b995c881b9bdd081cd95d60921b604482015260640161064c565b61172d6001600160a01b0384168284611893565b60405163226bf2d160e21b81526001600160a01b0384811660048301528216906389afcb44906024016020604051808303816000875af1158015611775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117999190611f61565b505b6040516001600160a01b0382811682528391908516907f3046a3d146b187c183dda3e958fabea0fd764b952de1b2e98e30f946ddc2aa569060200160405180910390a350505050505b60405180604001604052806117f8600b5490565b81526020908101939093526001600160a01b039093166000908152600583526040902083518155929091015160019092019190915550565b6040516001600160a01b0383166024820152604481018290526107df90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261194b565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156118e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119089190611f61565b6119129190611f97565b6040516001600160a01b03851660248201526044810182905290915061194590859063095ea7b360e01b9060640161185c565b50505050565b60006119a0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a1d9092919063ffffffff16565b8051909150156107df57808060200190518101906119be9190611f44565b6107df5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161064c565b6060611a2c8484600085611a36565b90505b9392505050565b606082471015611a975760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161064c565b6001600160a01b0385163b611aee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161064c565b600080866001600160a01b03168587604051611b0a9190612033565b60006040518083038185875af1925050503d8060008114611b47576040519150601f19603f3d011682016040523d82523d6000602084013e611b4c565b606091505b5091509150611b5c828286611b67565b979650505050505050565b60608315611b76575081611a2f565b825115611b865782518084602001fd5b8160405162461bcd60e51b815260040161064c919061204f565b6001600160a01b03811681146110db57600080fd5b600060208284031215611bc757600080fd5b8135611a2f81611ba0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611c1157611c11611bd2565b604052919050565b600067ffffffffffffffff821115611c3357611c33611bd2565b5060051b60200190565b600082601f830112611c4e57600080fd5b81356020611c63611c5e83611c19565b611be8565b82815260059290921b84018101918181019086841115611c8257600080fd5b8286015b84811015611ca6578035611c9981611ba0565b8352918301918301611c86565b509695505050505050565b80151581146110db57600080fd5b60008060408385031215611cd257600080fd5b823567ffffffffffffffff80821115611cea57600080fd5b611cf686838701611c3d565b9350602091508185013581811115611d0d57600080fd5b85019050601f81018613611d2057600080fd5b8035611d2e611c5e82611c19565b81815260059190911b82018301908381019088831115611d4d57600080fd5b928401925b82841015611d74578335611d6581611cb1565b82529284019290840190611d52565b80955050505050509250929050565b60008060408385031215611d9657600080fd5b8235611da181611ba0565b91506020830135611db181611cb1565b809150509250929050565b600060208284031215611dce57600080fd5b5035919050565b60008060408385031215611de857600080fd5b823567ffffffffffffffff80821115611e0057600080fd5b611e0c86838701611c3d565b93506020850135915080821115611e2257600080fd5b50611e2f85828601611c3d565b9150509250929050565b600060208284031215611e4b57600080fd5b813567ffffffffffffffff811115611e6257600080fd5b611e6e84828501611c3d565b949350505050565b60008060408385031215611e8957600080fd5b8235611e9481611ba0565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600c908201526b696e76616c6964206461746160a01b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611f3d57611f3d611f13565b5060010190565b600060208284031215611f5657600080fd5b8151611a2f81611cb1565b600060208284031215611f7357600080fd5b5051919050565b600060208284031215611f8c57600080fd5b8151611a2f81611ba0565b60008219821115611faa57611faa611f13565b500190565b600082821015611fc157611fc1611f13565b500390565b6000816000190483118215151615611fe057611fe0611f13565b500290565b60008261200257634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101561202257818101518382015260200161200a565b838111156119455750506000910152565b60008251612045818460208701612007565b9190910192915050565b602081526000825180602084015261206e816040850160208701612007565b601f01601f1916919091016040019291505056fea26469706673582212206bd2c5b79acd8d4ffef0ecda2e36dd83ca63923837bdc92989c22ef9691710f164736f6c634300080b0033";

type MockReserveManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockReserveManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockReserveManager__factory extends ContractFactory {
  constructor(...args: MockReserveManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _manualBurner: PromiseOrValue<string>,
    _comptroller: PromiseOrValue<string>,
    _wethAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockReserveManager> {
    return super.deploy(
      _owner,
      _manualBurner,
      _comptroller,
      _wethAddress,
      _usdcAddress,
      overrides || {}
    ) as Promise<MockReserveManager>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _manualBurner: PromiseOrValue<string>,
    _comptroller: PromiseOrValue<string>,
    _wethAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _manualBurner,
      _comptroller,
      _wethAddress,
      _usdcAddress,
      overrides || {}
    );
  }
  override attach(address: string): MockReserveManager {
    return super.attach(address) as MockReserveManager;
  }
  override connect(signer: Signer): MockReserveManager__factory {
    return super.connect(signer) as MockReserveManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockReserveManagerInterface {
    return new utils.Interface(_abi) as MockReserveManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockReserveManager {
    return new Contract(address, _abi, signerOrProvider) as MockReserveManager;
  }
}
