/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  WETH,
  WETHInterface,
} from "../../../../contracts/reserve-manager/stub/WETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600d60808190526c2bb930b83832b21022ba3432b960991b60a090815261002e916000919061007a565b50604080518082019091526004808252630ae8aa8960e31b602090920191825261005a9160019161007a565b506002805460ff1916601217905534801561007457600080fd5b5061014e565b82805461008690610113565b90600052602060002090601f0160209004810192826100a857600085556100ee565b82601f106100c157805160ff19168380011785556100ee565b828001600101855582156100ee579182015b828111156100ee5782518255916020019190600101906100d3565b506100fa9291506100fe565b5090565b5b808211156100fa57600081556001016100ff565b600181811c9082168061012757607f821691505b6020821081141561014857634e487b7160e01b600052602260045260246000fd5b50919050565b6106c08061015d6000396000f3fe60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461018357806370a08231146101af57806395d89b41146101dc578063a9059cbb146101f1578063d0e30db014610211578063dd62ed3e1461021957600080fd5b806306fdde03146100a1578063095ea7b3146100cc57806318160ddd1461012457806323b872dd146101415780632e1a7d4d14610161575b600080fd5b3480156100ad57600080fd5b506100b6610251565b6040516100c391906104cc565b60405180910390f35b3480156100d857600080fd5b506101146100e736600461053d565b3360009081526004602090815260408083206001600160a01b039590951683529390529190912055600190565b60405190151581526020016100c3565b34801561013057600080fd5b50475b6040519081526020016100c3565b34801561014d57600080fd5b5061011461015c366004610567565b6102df565b34801561016d57600080fd5b5061018161017c3660046105a3565b610414565b005b34801561018f57600080fd5b5060025461019d9060ff1681565b60405160ff90911681526020016100c3565b3480156101bb57600080fd5b506101336101ca3660046105bc565b60036020526000908152604090205481565b3480156101e857600080fd5b506100b6610485565b3480156101fd57600080fd5b5061011461020c36600461053d565b610492565b6101816104a6565b34801561022557600080fd5b506101336102343660046105d7565b600460209081526000928352604080842090915290825290205481565b6000805461025e9061060a565b80601f016020809104026020016040519081016040528092919081815260200182805461028a9061060a565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b505050505081565b6001600160a01b03831660009081526003602052604081205482111561030457600080fd5b6001600160a01b038416331480159061034257506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b156103b0576001600160a01b038416600090815260046020908152604080832033845290915290205482111561037757600080fd5b6001600160a01b0384166000908152600460209081526040808320338452909152812080548492906103aa90849061065b565b90915550505b6001600160a01b038416600090815260036020526040812080548492906103d890849061065b565b90915550506001600160a01b03831660009081526003602052604081208054849290610405908490610672565b90915550600195945050505050565b3360009081526003602052604090205481111561043057600080fd5b336000908152600360205260408120805483929061044f90849061065b565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610481573d6000803e3d6000fd5b5050565b6001805461025e9061060a565b600061049f3384846102df565b9392505050565b33600090815260036020526040812080543492906104c5908490610672565b9091555050565b600060208083528351808285015260005b818110156104f9578581018301518582016040015282016104dd565b8181111561050b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461053857600080fd5b919050565b6000806040838503121561055057600080fd5b61055983610521565b946020939093013593505050565b60008060006060848603121561057c57600080fd5b61058584610521565b925061059360208501610521565b9150604084013590509250925092565b6000602082840312156105b557600080fd5b5035919050565b6000602082840312156105ce57600080fd5b61049f82610521565b600080604083850312156105ea57600080fd5b6105f383610521565b915061060160208401610521565b90509250929050565b600181811c9082168061061e57607f821691505b6020821081141561063f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561066d5761066d610645565b500390565b6000821982111561068557610685610645565b50019056fea26469706673582212208d304f6dfae6d83810981f72a7c92abd85d5b134d6608c3f6e200af2137f335e64736f6c634300080b0033";

type WETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH__factory extends ContractFactory {
  constructor(...args: WETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  override connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
